StringBuffer :
----------------

1) There are some cases, where using String is not recommended there we use StringBuffer.

2) If the content is fixed and will not be changing at runtime then String is the best choice.
                                             But
3) If the content will be changing many times, never use String. Instead, use StringBuffer .


Constructors of StringBuffer :
-------------------------------

1) StringBuffer sb1 = new StringBuffer();

        The default capacity of empty StringBuffer is 16.

        sout(sb1.capacity()); //-->16

        Refer Example1 java program...


2) StringBuffer sb = new StringBuffer(int initial-capacity)


3) StringBuffer sb = new StringBuffer(String s)

            sb.capacity();---------> When we pass String-Object in StringBuffer the capacity is : s.length() + 16


Important methods() of StringBuffer :
--------------------------------------

1) public int length()

2) public int capacity()

3) public char charAt (int index)

4) public void setCharAt (int index, char newCharacter)

5) public StringBuffer append ( String s)
   public StringBuffer append ( byte b)
   public StringBuffer append ( int i)
   public StringBuffer append ( double d)
   public StringBuffer append ( boolean b) .............

6) public String insert (int index, String s)

7) public String delete (int beginIndex, int endIndex)----> It deletes from beginIndex....To....endIndex-1.

8) public StringBuffer deleteCharAt(int index)

9) public StringBuffer reverse ()

10) public void setLength(int length)---------> It will print StringBuffer till given length

11) public void ensureCapacity (int capacity) ----> when we want to increase capacity after declaring initial-capacity.

12) public StringBuffer trimToSize() ----> It will de-allocate extra memory and initialize to given length().


******** Note : All methods() of StringBuffer() are "synchronized". ************
 So, only one thread will be allowed to use method at a time.
 It is thread-safe.
 This will reduce performance. So for MultiThreaded environment we cannot use StringBuffer.
 So in 1.5-version StringBuilder came.

 So every method present in StringBuffer is present is StringBuilder but without "synchronized" keyword in methods().
